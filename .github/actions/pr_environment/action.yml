name: 'PR Environment'
description: 'Creates a comment with a link to a preview environment for pull requests'

inputs:
  URL_TEMPLATE:
    description: 'URL template for PR environment (use ${PR_NUMBER} as placeholder for PR number)'
    required: false
    default: 'https://buildkite-node-app-${PR_NUMBER}.dev.devops.2u.com'
  COMMENT_PREFIX:
    description: 'Prefix text for the comment'
    required: false
    default: 'Preview environment will be available @'
  ADD_PREVIEW_LABEL:
    description: 'Whether to add a preview label to the PR'
    required: false
    default: 'true'
  LABEL_NAME:
    description: 'Name of the label to add to the PR'
    required: false
    default: 'preview'

runs:
  using: "composite"
  steps:
    - name: Create PR Environment Comment
      uses: actions/github-script@v6
      with:
        script: |
          // Skip for certain branch patterns
          const branchName = context.payload.pull_request.head.ref;
          if (branchName.startsWith('promote-') || branchName.startsWith('release-please')) {
            console.log('Skipping PR environment for branch:', branchName);
            return;
          }
          
          // Add label if configured
          if ('${{ inputs.ADD_PREVIEW_LABEL }}' === 'true') {
            try {
              await github.rest.issues.addLabels({
                ...context.repo,
                issue_number: context.issue.number,
                labels: ['${{ inputs.LABEL_NAME }}']
              });
              console.log('Added label: ${{ inputs.LABEL_NAME }}');
            } catch (error) {
              console.log('Error adding label:', error.message);
            }
          }

          // Replace placeholder in URL template
          const urlTemplate = '${{ inputs.URL_TEMPLATE }}';
          const previewUrl = urlTemplate.replace('${PR_NUMBER}', context.issue.number);
          console.log('Preview URL:', previewUrl);
          
          const commentPrefix = '${{ inputs.COMMENT_PREFIX }}';
          const commentText = `${commentPrefix} ${previewUrl}`;
          
          // Search phrase to find existing comments
          const searchPhrase = commentPrefix;

          // Get existing comments first
          const comments = await github.rest.issues.listComments({
            ...context.repo,
            issue_number: context.issue.number
          });

          // Check if any comment contains our search phrase
          const existingComment = comments.data.find(c => c.body.includes(searchPhrase));

          if (existingComment) {
            console.log('Found existing preview environment comment with ID:', existingComment.id);
            // Optionally update the existing comment if needed
            if (existingComment.body !== commentText) {
              await github.rest.issues.updateComment({
                ...context.repo,
                comment_id: existingComment.id,
                body: commentText
              });
              console.log('Updated existing comment with new URL');
            }
          } else {
            console.log('No matching preview environment comment found, creating new one');
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: commentText
            });
            console.log('Created new preview environment comment');
          }
