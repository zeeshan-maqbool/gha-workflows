name: 'Promote Release'
description: 'Promotes a version from one environment to another by updating GitOps configuration'

inputs:
  source_env:
    description: 'Source environment'
    required: true
  target_env:
    description: 'Target environment'
    required: true
  version:
    description: 'Version to promote'
    required: true
  gitops_file:
    description: 'Path to the GitOps configuration file'
    required: false
    default: 'gitops.yaml'
  app_id:
    description: 'GitHub App ID for token generation (optional, defaults to vars.GITOPS_BOT_APP_ID)'
    required: false
    default: ''
  private_key:
    description: 'GitHub App private key for token generation (optional, defaults to secrets.GITOPS_BOT_PRIVATE_KEY)'
    required: false
    default: ''
  runner:
    description: 'GitHub runner to use'
    required: false
    default: '2uinc-mgmt'

outputs:
  pr_url:
    description: 'URL of the created pull request'
    value: ${{ steps.create-pr.outputs.pull-request-url }}
  pr_number:
    description: 'Number of the created pull request'
    value: ${{ steps.create-pr.outputs.pull-request-number }}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    - name: Check version exists in source
      id: check-version
      shell: bash
      run: |
        SOURCE_VERSION=$(yq -r ".apps[] | select(.env == \"${{ inputs.source_env }}\").revision" ${{ inputs.gitops_file }})
        TARGET_VERSION="${{ inputs.version }}"

        # Check if version exists in source environment
        if [ "$SOURCE_VERSION" = "$TARGET_VERSION" ]; then
          echo "Version $TARGET_VERSION found in ${{ inputs.source_env }}"
          echo "valid=true" >> $GITHUB_OUTPUT
        else
          echo "Error: Version $TARGET_VERSION not found in ${{ inputs.source_env }}"
          echo "valid=false" >> $GITHUB_OUTPUT
          exit 1
        fi

    - uses: actions/create-github-app-token@v1
      id: generate-token
      with:
        app-id: ${{ inputs.app_id != '' && inputs.app_id || vars.GITOPS_BOT_APP_ID }}
        private-key: ${{ inputs.private_key != '' && inputs.private_key || secrets.GITOPS_BOT_PRIVATE_KEY }}

    - name: Update GitOps and Helm configs
      shell: bash
      run: |
        # Update gitops.yaml
        yq -i '(.apps[] | select(.env == "${{ inputs.target_env }}").revision) = "${{ inputs.version }}"' ${{ inputs.gitops_file }}

    - name: Create Pull Request
      id: create-pr
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ steps.generate-token.outputs.token }}
        commit-message: 'chore: promote version ${{ inputs.version }} to ${{ inputs.target_env }}'
        title: 'chore: promote version ${{ inputs.version }} to ${{ inputs.target_env }}'
        body: |
          Promoting version ${{ inputs.version }} from ${{ inputs.source_env }} to ${{ inputs.target_env }}

          ## Promotion Details
          - Source: ${{ inputs.source_env }}
          - Target: ${{ inputs.target_env }}
          - Version: ${{ inputs.version }}

          This PR was automatically generated by the promotion workflow.
        branch: promote-${{ inputs.version }}-to-${{ inputs.target_env }}
        labels: |
          promotion
          env/${{ inputs.source_env }}-to-${{ inputs.target_env }}
          version/${{ inputs.version }}
        delete-branch: true
